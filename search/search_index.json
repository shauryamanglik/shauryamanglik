{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Datasheet","text":"","tags":["tag1","tag2"]},{"location":"#hello-my-name-is-shaurya","title":"Hello, my name is Shaurya","text":"","tags":["tag1","tag2"]},{"location":"#individual_subsystem_egr314_sm","title":"Individual_Subsystem_EGR314_SM","text":"","tags":["tag1","tag2"]},{"location":"EGR314%20-%20Component%20Selection%20%5BMConverter.eu%5D/","title":"EGR314   Component Selection [MConverter.eu]","text":"<p>EGR314: Component Selection</p> <p>Shaurya Manglik</p> <ol> <li>Microcontroller</li> </ol> Option Component Pros Cons 1. <p>PIC18F27Q10-I/SP</p> <p></p> <p>Price: $2.08/unit</p> <p>Link: Click Here</p> <p>Datasheet</p> <p>Mfr: Microchip Technology</p> <ul> <li> <p>High-Performance 8-bit MCU \u2013 Optimized for real-time control applications.</p> </li> <li> <p>Multiple Communication Interfaces \u2013 Supports SPI, I\u00b2C, and UART, useful for interfacing with a gyroscope.</p> </li> <li> <p>Low Power Consumption \u2013 Ideal for battery-operated systems.</p> </li> <li> <p>Configurable Logic &amp; Peripherals \u2013 Reduces the need for external components.</p> </li> <li> <p>Analog Features \u2013 Includes ADC and comparators, useful for sensor integration.</p> </li> </ul> <ul> <li> <p>Limited Processing Power \u2013 As an 8-bit MCU, it may struggle with heavy computations.</p> </li> <li> <p>No Floating-Point Unit \u2013 Could make complex math operations slower.</p> </li> <li> <p>Limited RAM (3.8 KB) \u2013 Might be restrictive for data-heavy applications.</p> </li> <li> <p>Through-Hole Package (DIP-28) \u2013 Good for prototyping, but may not be ideal for compact designs.</p> </li> </ul> 2. <p>PIC18F46Q71-I/P</p> <p></p> <p>Price: $2.43/unit</p> <p>Link: Click Here</p> <p>Datasheet</p> <p>Mfr: Microchip Technology</p> <ul> <li> <p>More Processing Power \u2013 8-bit MCU but with a higher feature set than standard PIC18s.</p> </li> <li> <p>Dedicated Math Accelerator \u2013 Helps with DSP-like operations, useful for sensor fusion.</p> </li> <li> <p>Multiple Communication Interfaces \u2013 SPI, I\u00b2C, and UART for seamless gyroscope integration.</p> </li> <li> <p>Advanced Analog Features \u2013 12-bit ADC, op-amps, and DAC, improving sensor signal handling.</p> </li> <li> <p>Extended Temperature Range \u2013 Good for industrial applications.</p> </li> </ul> <ul> <li> <p>Larger Package (DIP-40) \u2013 Takes up more PCB space, which may not be ideal for compact designs.</p> </li> <li> <p>Still 8-bit \u2013 Might be limiting for high-speed or complex real-time processing.</p> </li> <li> <p>No Floating-Point Support \u2013 Can slow down complex calculations.</p> </li> </ul> <p>I chose the PIC18F27Q10 because it provides the necessary communication interfaces (SPI, I\u00b2C, UART) for gyroscope data collection, has low power consumption, and includes configurable peripherals that simplify integration. Additionally, it was already available in class, making it a more convenient and cost-effective choice.</p> <ol> <li>Gyroscope</li> </ol> Option Component Pros Cons 1. <p>MPU-6050</p> <p></p> <p>Price: $13.95/unit</p> <p>Link: Click Here</p> <p>Datasheet</p> <p>Mfr: InvenSense</p> <ul> <li> <p>3.3V Compatible \u2013 Works with desired power setup.</p> </li> <li> <p>I\u00b2C Communication \u2013 Simple two-wire interface.</p> </li> <li> <p>Built-in Accelerometer &amp; Gyroscope \u2013 Provides 6DOF motion tracking.</p> </li> <li> <p>Digital Motion Processor (DMP) \u2013 Offloads sensor fusion calculations from the MCU.</p> </li> <li> <p>Low Power Consumption \u2013 Suitable for battery-powered applications.</p> </li> <li> <p>Well-Supported in MicroPython \u2013 Libraries available for easy integration.</p> </li> </ul> <ul> <li> <p>No Magnetometer \u2013 Cannot determine absolute orientation without an external sensor.</p> </li> <li> <p>Can Be Noisy \u2013 Requires filtering for precise readings.</p> </li> <li> <p>Factory Calibration May Vary \u2013 Might need additional software calibration.</p> </li> </ul> 2. <p>A3G4250DTR</p> <p></p> <p>Price: $15.66/unit</p> <p>Link: Click Here</p> <p>Datasheet</p> <p>Mfr: STMicroelectronics</p> <ul> <li> <p>3.3V Operation \u2013 Directly compatible with desired power supply.</p> </li> <li> <p>I\u00b2C &amp; SPI Support \u2013 Flexible communication options.</p> </li> <li> <p>High-Resolution (16-bit output) \u2013 Provides precise angular rate data.</p> </li> <li> <p>Low Power Consumption \u2013 Suitable for battery-operated applications.</p> </li> <li> <p>Embedded Low-Pass Filter \u2013 Helps reduce noise in measurements.</p> </li> </ul> <ul> <li> <p>No Accelerometer or Magnetometer \u2013 Only provides gyroscope data.</p> </li> <li> <p>Limited Community Support \u2013 Fewer MicroPython libraries available.</p> </li> <li> <p>Fixed Full-Scale Range (\u00b1245 dps) \u2013 Not adjustable for higher-speed motion tracking.</p> </li> </ul> <p>I chose the MPU-6050 over the A3G4250DTR because it includes both a gyroscope and accelerometer, providing 6DOF motion tracking, whereas the A3G only offers gyroscope data. The MPU-6050 has better MicroPython support, making integration easier, and operates at 3.3V with I\u00b2C, aligning well with my system's power and communication setup.</p> <ol> <li>ESP32</li> </ol> Option Component Pros Cons 1. <p>ESP32-S3-WROOM-1-N4</p> <p></p> <p>Price: $2.95/unit</p> <p>Link: Click Here</p> <p>Datasheet</p> <p>Mfr: Espressif Systems</p> <ul> <li> <p>Powerful Dual-Core Processor \u2013 Handles complex computations efficiently.</p> </li> <li> <p>Wi-Fi &amp; Bluetooth 5.0 \u2013 Enables wireless communication and IoT applications.</p> </li> <li> <p>Supports MicroPython \u2013 Well-documented libraries available.</p> </li> <li> <p>Multiple I/O Interfaces \u2013 SPI, I\u00b2C, UART, PWM, ADC, and DAC.</p> </li> <li> <p>3.3V Logic Level \u2013 Compatible with your power setup.</p> </li> <li> <p>Large Flash Storage (4MB) \u2013 Allows for extensive firmware and data storage.</p> </li> </ul> <ul> <li> <p>Higher Power Consumption \u2013 Uses more power than basic microcontrollers.</p> </li> <li> <p>3.3V Logic Only \u2013 Requires level shifting if interfacing with 5V components.</p> </li> <li> <p>No Native USB-to-Serial Converter \u2013 Needs an external chip or board for easier programming.</p> </li> </ul> 2. <p>ESP32-WROOM-32UE-N4</p> <p></p> <p>Price: $2.50/unit</p> <p>Link: Click Here</p> <p>Datasheet</p> <p>Mfr: Espressif Systems</p> <ul> <li> <p>Dual-Core Processor \u2013 Handles multitasking and real-time processing efficiently.</p> </li> <li> <p>Wi-Fi &amp; Bluetooth 4.2 \u2013 Supports wireless communication for IoT applications.</p> </li> <li> <p>MicroPython Compatible \u2013 Well-supported with libraries and documentation.</p> </li> <li> <p>Multiple I/O Interfaces \u2013 SPI, I\u00b2C, UART, PWM, ADC, and DAC.</p> </li> <li> <p>3.3V Logic Level \u2013 Compatible with your power setup.</p> </li> <li> <p>External Antenna Support (UE Variant) \u2013 Allows for better wireless range and signal strength.</p> </li> </ul> <ul> <li> <p>Older Bluetooth Version (4.2) \u2013 Lacks Bluetooth 5.0 features like longer range and lower power.</p> </li> <li> <p>Higher Power Consumption \u2013 Can drain batteries faster than simpler microcontrollers.</p> </li> <li> <p>No Native USB-to-Serial Converter \u2013 Requires an external chip or board for easier programming.</p> </li> </ul> <p>I chose the ESP32-S3-WROOM-1-N4 over the ESP32-WROOM-32UE-N4 because it has a more powerful dual-core processor, supports Bluetooth 5.0 for better range and efficiency, and offers enhanced AI acceleration for potential future applications. Additionally, it aligns well with MicroPython support and the 3.3V power setup needed for the system.</p>"},{"location":"charts/","title":"Charts","text":"<pre><code>graph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];</code></pre> <pre><code>sequenceDiagram\n  autonumber\n  Alice-&gt;&gt;John: Hello John, how are you?\n  loop Healthcheck\n      John-&gt;&gt;John: Fight against hypochondria\n  end\n  Note right of John: Rational thoughts!\n  John--&gt;&gt;Alice: Great!\n  John-&gt;&gt;Bob: How about you?\n  Bob--&gt;&gt;John: Jolly good!</code></pre> <pre><code>stateDiagram-v2\n  state fork_state &lt;&lt;fork&gt;&gt;\n    [*] --&gt; fork_state\n    fork_state --&gt; State2\n    fork_state --&gt; State3\n\n    state join_state &lt;&lt;join&gt;&gt;\n    State2 --&gt; join_state\n    State3 --&gt; join_state\n    join_state --&gt; State4\n    State4 --&gt; [*]</code></pre>"},{"location":"second-page/","title":"Second Page","text":"<p>Things to discuss</p>"},{"location":"static/node_modules/mathjax/","title":"MathJax","text":""},{"location":"static/node_modules/mathjax/#beautiful-math-in-all-browsers","title":"Beautiful math in all browsers","text":"<p>MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all modern browsers.  It was designed with the goal of consolidating the recent advances in web technologies into a single, definitive, math-on-the-web platform supporting the major browsers and operating systems.  It requires no setup on the part of the user (no plugins to download or software to install), so the page author can write web documents that include mathematics and be confident that users will be able to view it naturally and easily.  Simply include MathJax and some mathematics in a web page, and MathJax does the rest.</p> <p>Some of the main features of MathJax include:</p> <ul> <li> <p>High-quality display of LaTeX, MathML, and AsciiMath notation in HTML pages</p> </li> <li> <p>Supported in most browsers with no plug-ins, extra fonts, or special   setup for the reader</p> </li> <li> <p>Easy for authors, flexible for publishers, extensible for developers</p> </li> <li> <p>Supports math accessibility, cut-and-paste interoperability, and other   advanced functionality</p> </li> <li> <p>Powerful API for integration with other web applications</p> </li> </ul> <p>See http://www.mathjax.org/ for additional details about MathJax, and https://docs.mathjax.org for the MathJax documentation.</p>"},{"location":"static/node_modules/mathjax/#mathjax-components","title":"MathJax Components","text":"<p>MathJax version 3 uses files called components that contain the various MathJax modules that you can include in your web pages or access on a server through NodeJS.  Some components combine all the pieces you need to run MathJax with one or more input formats and a particular output format, while other components are pieces that can be loaded on demand when needed, or by a configuration that specifies the pieces you want to combine in a custom way.  For usage instructions, see the MathJax documentation.</p> <p>Components provide a convenient packaging of MathJax's modules, but it is possible for you to form your own custom components, or to use MathJax's modules directly in a node application on a server.  There are web examples showing how to use MathJax in web pages and how to build your own components, and node examples illustrating how to use components in node applications or call MathJax modules directly.</p>"},{"location":"static/node_modules/mathjax/#whats-in-this-repository","title":"What's in this Repository","text":"<p>This repository contains only the component files for MathJax, not the source code for MathJax (which are available in a separate MathJax source repository).  These component files are the ones served by the CDNs that offer MathJax to the web.  In version 2, the files used on the web were also the source files for MathJax, but in version 3, the source files are no longer on the CDN, as they are not what are run in the browser.</p> <p>The components are stored in the <code>es5</code> directory, and are in ES5 format for the widest possible compatibility.  In the future, we may make an <code>es6</code> directory containing ES6 versions of the components.</p>"},{"location":"static/node_modules/mathjax/#installation-and-use","title":"Installation and Use","text":""},{"location":"static/node_modules/mathjax/#using-mathjax-components-from-a-cdn-on-the-web","title":"Using MathJax components from a CDN on the web","text":"<p>If you are loading MathJax from a CDN into a web page, there is no need to install anything.  Simply use a <code>script</code> tag that loads MathJax from the CDN.  E.g.,</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>See the MathJax documentation, the MathJax Web Demos, and the MathJax Component Repository for more information.</p>"},{"location":"static/node_modules/mathjax/#hosting-your-own-copy-of-the-mathjax-components","title":"Hosting your own copy of the MathJax Components","text":"<p>If you want to host MathJax from your own server, you can do so by installing the <code>mathjax</code> package using <code>npm</code> and moving the <code>es5</code> directory to an appropriate location on your server:</p> <pre><code>npm install mathjax@3\nmv node_modules/mathjax/es5 &lt;path-to-server-location&gt;/mathjax\n</code></pre> <p>Note that we are still making updates to version 2, so include <code>@3</code> when you install, since the latest chronological version may not be version 3.</p> <p>Alternatively, you can get the files via GitHub:</p> <pre><code>git clone https://github.com/mathjax/MathJax.git mj-tmp\nmv mj-tmp/es5 &lt;path-to-server-location&gt;/mathjax\nrm -rf mj-tmp\n</code></pre> <p>Then (in either case) you can use a script tag like the following:</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"&lt;url-to-your-site&gt;/mathjax/tex-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>where <code>&lt;url-to-your-site&gt;</code> is replaced by the URL to the location where you moved the MathJax files above.</p> <p>See the documentation for details.</p>"},{"location":"static/node_modules/mathjax/#using-mathjax-components-in-a-node-application","title":"Using MathJax components in a node application","text":"<p>To use MathJax components in a node application, install the <code>mathjax</code> package:</p> <pre><code>npm install mathjax@3\n</code></pre> <p>(we are still making updates to version 2, so you should include <code>@3</code> since the latest chronological version may not be version 3).</p> <p>Then require <code>mathjax</code> within your application:</p> <pre><code>require('mathjax').init({ ... }).then((MathJax) =&gt; { ... });\n</code></pre> <p>where the first <code>{ ... }</code> is a MathJax configuration, and the second <code>{ ... }</code> is the code to run after MathJax has been loaded.  E.g.</p> <pre><code>require('mathjax').init({\nloader: {load: ['input/tex', 'output/svg']}\n}).then((MathJax) =&gt; {\nconst svg = MathJax.tex2svg('\\\\frac{1}{x^2-1}', {display: true});\nconsole.log(MathJax.startup.adaptor.outerHTML(svg));\n}).catch((err) =&gt; console.log(err.message));\n</code></pre> <p>Note: this technique is for node-based application only, not for browser applications.  This method sets up an alternative DOM implementation, which you don't need in the browser, and tells MathJax to use node's <code>require()</code> command to load external modules.  This setup will not work properly in the browser, even if you webpack it or bundle it in other ways.</p> <p>See the documentation and the MathJax Node Repository for more details.</p>"},{"location":"static/node_modules/mathjax/#reducing-the-size-of-the-components-directory","title":"Reducing the Size of the Components Directory","text":"<p>Since the <code>es5</code> directory contains all the component files, so if you are only planning one use one configuration, you can reduce the size of the MathJax directory by removing unused components. For example, if you are using the <code>tex-chtml.js</code> component, then you can remove the <code>tex-mml-chtml.js</code>, <code>tex-svg.js</code>, <code>tex-mml-svg.js</code>, <code>tex-chtml-full.js</code>, and <code>tex-svg-full.js</code> configurations, which will save considerable space.  Indeed, you should be able to remove everything other than <code>tex-chtml.js</code>, and the <code>input/tex/extensions</code>, <code>output/chtml/fonts/woff-v2</code>, <code>adaptors</code>, <code>a11y</code>, and <code>sre</code> directories.  If you are using the results only on the web, you can remove <code>adaptors</code> as well.</p> <p>If you are not using A11Y support (e.g., speech generation, or semantic enrichment), then you can remove <code>a11y</code> and <code>sre</code> as well (though in this case you may need to disable the assistive tools in the MathJax contextual menu in order to avoid MathJax trying to load them when they aren't there).</p> <p>If you are using SVG rather than CommonHTML output (e.g., <code>tex-svg.js</code> rather than <code>tex-chtml.js</code>), you can remove the <code>output/chtml/fonts/woff-v2</code> directory.  If you are using MathML input rather than TeX (e.g., <code>mml-chtml.js</code> rather than <code>tex-chtml.js</code>), then you can remove <code>input/tex/extensions</code> as well.</p>"},{"location":"static/node_modules/mathjax/#the-component-files-and-pull-requests","title":"The Component Files and Pull Requests","text":"<p>The <code>es5</code> directory is generated automatically from the contents of the MathJax source repository.  You can rebuild the components using the command</p> <pre><code>npm run make-es5 --silent\n</code></pre> <p>Note that since the contents of this repository are generated automatically, you should not submit pull requests that modify the contents of the <code>es5</code> directory.  If you wish to submit a modification to MathJax, you should make a pull request in the MathJax source repository.</p>"},{"location":"static/node_modules/mathjax/#mathjax-community","title":"MathJax Community","text":"<p>The main MathJax website is http://www.mathjax.org, and it includes announcements and other important information.  A MathJax user forum for asking questions and getting assistance is hosted at Google, and the MathJax bug tracker is hosted at GitHub.</p> <p>Before reporting a bug, please check that it has not already been reported.  Also, please use the bug tracker (rather than the help forum) for reporting bugs, and use the user's forum (rather than the bug tracker) for questions about how to use MathJax.</p>"},{"location":"static/node_modules/mathjax/#mathjax-resources","title":"MathJax Resources","text":"<ul> <li>MathJax Documentation</li> <li>MathJax Components</li> <li>MathJax Source Code</li> <li>MathJax Web Examples</li> <li>MathJax Node Examples</li> <li>MathJax Bug Tracker</li> <li>MathJax Users' Group</li> </ul>"},{"location":"subfolder/","title":"This is the index to a subfolder","text":"<p>Things to discuss</p>"},{"location":"subfolder/another-subfile/","title":"This is a secondary sub page","text":"<p>Things to discuss</p>"}]}