{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Datasheet","text":"","tags":["tag1","tag2"]},{"location":"#hello-my-name-is-shaurya","title":"Hello, my name is Shaurya","text":"","tags":["tag1","tag2"]},{"location":"#individual_subsystem_egr314_sm","title":"Individual_Subsystem_EGR314_SM","text":"","tags":["tag1","tag2"]},{"location":"Component%20Selection/","title":"Component Selection","text":"<p>1. Microcontroller</p> Option Component Pros Cons 1. <p>PIC18F27Q10-I/STX</p> <p></p> <p>Price: $1.36/unit</p> <p>Link: Click Here</p> <p>Datasheet</p> <p>Mfr: Microchip Technology</p> <ul> <li> <p>High-Performance 8-bit MCU \u2013 Optimized for real-time control applications.</p> </li> <li> <p>Multiple Communication Interfaces \u2013 Supports SPI, I\u00b2C, and UART, useful for interfacing with a gyroscope.</p> </li> <li> <p>Low Power Consumption \u2013 Ideal for battery-operated systems.</p> </li> <li> <p>Configurable Logic &amp; Peripherals \u2013 Reduces the need for external components.</p> </li> <li> <p>Analog Features \u2013 Includes ADC and comparators, useful for sensor integration.</p> </li> </ul> <ul> <li> <p>Limited Processing Power \u2013 As an 8-bit MCU, it may struggle with heavy computations.</p> </li> <li> <p>No Floating-Point Unit \u2013 Could make complex math operations slower.</p> </li> <li> <p>Limited RAM (3.8 KB) \u2013 Might be restrictive for data-heavy applications.</p> </li> <li> <p>Through-Hole Package (DIP-28) \u2013 Good for prototyping, but may not be ideal for compact designs.</p> </li> </ul> 2. <p>PIC18F46Q71-I/P</p> <p></p> <p>Price: $2.43/unit</p> <p>Link: Click Here</p> <p>Datasheet</p> <p>Mfr: Microchip Technology</p> <ul> <li> <p>More Processing Power \u2013 8-bit MCU but with a higher feature set than standard PIC18s.</p> </li> <li> <p>Dedicated Math Accelerator \u2013 Helps with DSP-like operations, useful for sensor fusion.</p> </li> <li> <p>Multiple Communication Interfaces \u2013 SPI, I\u00b2C, and UART for seamless gyroscope integration.</p> </li> <li> <p>Advanced Analog Features \u2013 12-bit ADC, op-amps, and DAC, improving sensor signal handling.</p> </li> <li> <p>Extended Temperature Range \u2013 Good for industrial applications.</p> </li> </ul> <ul> <li> <p>Larger Package (DIP-40) \u2013 Takes up more PCB space, which may not be ideal for compact designs.</p> </li> <li> <p>Still 8-bit \u2013 Might be limiting for high-speed or complex real-time processing.</p> </li> <li> <p>No Floating-Point Support \u2013 Can slow down complex calculations.</p> </li> </ul> <p>I chose the PIC18F27Q10 because it provides the necessary communication interfaces (SPI, I\u00b2C, UART) for gyroscope data collection, has low power consumption, and includes configurable peripherals that simplify integration. Additionally, it was already available in class, making it a more convenient and cost-effective choice.</p> <p>2. Gyroscope</p> Option Component Pros Cons 1. <p>MPU-6050</p> <p></p> <p>Price: $13.95/unit</p> <p>Link: Click Here</p> <p>Datasheet</p> <p>Mfr: InvenSense</p> <ul> <li> <p>3.3V Compatible \u2013 Works with desired power setup.</p> </li> <li> <p>I\u00b2C Communication \u2013 Simple two-wire interface.</p> </li> <li> <p>Built-in Accelerometer &amp; Gyroscope \u2013 Provides 6DOF motion tracking.</p> </li> <li> <p>Digital Motion Processor (DMP) \u2013 Offloads sensor fusion calculations from the MCU.</p> </li> <li> <p>Low Power Consumption \u2013 Suitable for battery-powered applications.</p> </li> <li> <p>Well-Supported in MicroPython \u2013 Libraries available for easy integration.</p> </li> </ul> <ul> <li> <p>No Magnetometer \u2013 Cannot determine absolute orientation without an external sensor.</p> </li> <li> <p>Can Be Noisy \u2013 Requires filtering for precise readings.</p> </li> <li> <p>Factory Calibration May Vary \u2013 Might need additional software calibration.</p> </li> </ul> 2. <p>A3G4250DTR</p> <p></p> <p>Price: $15.66/unit</p> <p>Link: Click Here</p> <p>Datasheet</p> <p>Mfr: STMicroelectronics</p> <ul> <li> <p>3.3V Operation \u2013 Directly compatible with desired power supply.</p> </li> <li> <p>I\u00b2C &amp; SPI Support \u2013 Flexible communication options.</p> </li> <li> <p>High-Resolution (16-bit output) \u2013 Provides precise angular rate data.</p> </li> <li> <p>Low Power Consumption \u2013 Suitable for battery-operated applications.</p> </li> <li> <p>Embedded Low-Pass Filter \u2013 Helps reduce noise in measurements.</p> </li> </ul> <ul> <li> <p>No Accelerometer or Magnetometer \u2013 Only provides gyroscope data.</p> </li> <li> <p>Limited Community Support \u2013 Fewer MicroPython libraries available.</p> </li> <li> <p>Fixed Full-Scale Range (\u00b1245 dps) \u2013 Not adjustable for higher-speed motion tracking.</p> </li> </ul> 3. <p>ICM-20948</p> <p></p> <p>Price: $7.11/unit</p> <p>Link: Click Here</p> <p>Datasheet</p> <p>Mfr: TDK InvenSense</p> <ul> <li> <p>9-DOF Sensor: Includes a 3-axis gyroscope, 3-axis accelerometer, and 3-axis magnetometer for comprehensive motion sensing.</p> </li> <li> <p>Low Power Consumption: Optimized for battery-powered applications.</p> </li> <li> <p>I2C &amp; SPI Support: Provides flexibility in communication options.</p> </li> <li> <p>Built-in DMP (Digital Motion Processor): Offloads sensor fusion and calculations from the microcontroller.</p> </li> <li> <p>High Sensitivity: Precise motion tracking with \u00b12000 dps gyroscope, \u00b116g accelerometer, and \u00b14900\u00b5T magnetometer.</p> </li> <li> <p>Small Form Factor: Suitable for compact embedded systems.</p> </li> </ul> <ul> <li> <p>Complex Configuration: Requires multiple initialization steps and careful register management.</p> </li> <li> <p>Limited 3.3V Compatibility: Needs level shifting if interfacing with 5V microcontrollers.</p> </li> <li> <p>Magnetometer Requires Extra Handling: Uses an AK09916 chip internally, requiring separate I2C communication.</p> </li> <li> <p>Higher Cost: More expensive than simpler IMUs like the MPU6050.</p> </li> <li> <p>Limited Library Support in MicroPython: Might require custom driver development for full functionality.</p> </li> </ul> <p>I chose the MPU-6050 over the others because it includes both a gyroscope and accelerometer, providing 6DOF motion tracking, whereas the A3G4250DTR only offers gyroscope data. The MPU-6050 has better MicroPython support, making integration easier, and operates at 3.3V with I\u00b2C, aligning well with my system's power and communication setup.</p> <p>3. Voltage Regulator</p> Option Component Pros Cons 1. <p>LM2675MX-3.3/NOPB</p> <p></p> <p>Price: $4.36/unit</p> <p>Link: Click Here</p> <p>Datasheet</p> <p>Mfr: Texas Instruments</p> <ul> <li> <p>Switching Regulator (Buck Converter) \u2013 Higher efficiency than linear regulators.</p> </li> <li> <p>3.3V Fixed Output \u2013 No need for external voltage adjustment.</p> </li> <li> <p>Wide Input Voltage Range (6.5V\u201340V) \u2013 Compatible with a 9V battery.</p> </li> <li> <p>High Efficiency (~90%) \u2013 Reduces heat and extends battery life.</p> </li> <li> <p>500mA Output Current \u2013 Sufficient for low-power microcontroller systems.</p> </li> <li> <p>Built-in Thermal Shutdown and Current Limiting \u2013 Protects against overheating and overcurrent.</p> </li> </ul> <ul> <li> <p>Requires External Inductor and Capacitors \u2013 More complex circuit design.</p> </li> <li> <p>Larger Footprint than AMS1117 \u2013 Takes up more PCB space.</p> </li> <li> <p>More Expensive than Linear Regulators \u2013 Higher cost per unit.</p> </li> </ul> 2. <p>AMS1117-3.3S</p> <p></p> <p>Price: $0.47/unit</p> <p>Link: Click Here</p> <p>Datasheet</p> <p>Mfr: EVVO</p> <ul> <li> <p>3.3V Fixed Output \u2013 Stable voltage for microcontrollers and sensors.</p> </li> <li> <p>800mA Maximum Output Current \u2013 Sufficient for low-power embedded systems.</p> </li> <li> <p>Compact SOT-223 Package \u2013 Saves PCB space.</p> </li> <li> <p>Simple Implementation \u2013 Requires minimal external components (capacitors for stability).</p> </li> <li> <p>Low Cost \u2013 Affordable for most applications.</p> </li> </ul> <ul> <li> <p>Linear Regulator (Low Efficiency) \u2013 Converts excess power into heat, reducing battery life.</p> </li> <li> <p>Requires Heat Dissipation \u2013 May need a heat sink at higher loads.</p> </li> <li> <p>Higher Power Loss Compared to Switching Regulators \u2013 Not ideal for energy-efficient designs.</p> </li> </ul> 3. <p>AMS1117-3.3</p> <p></p> <p>Price: $0.68/unit</p> <p>Link: Click Here</p> <p>Datasheet</p> <p>Mfr: UMW</p> <ul> <li> <p>Low Dropout Voltage: Requires only 1.1V difference between input and output, making it efficient for regulating 9V down to 3.3V.</p> </li> <li> <p>3.3V Fixed Output: Perfect for powering low-voltage microcontrollers and sensors like the PIC18F27Q10 and MPU6050.</p> </li> <li> <p>Simple Design: Only requires a few capacitors for stability.</p> </li> <li> <p>Compact Size: Available in SOT-223 package, ideal for PCB designs.</p> </li> <li> <p>Affordable &amp; Widely Available: Low-cost voltage regulation solution.</p> </li> </ul> <ul> <li> <p>Low Current Output: Maximum 800mA, which may be insufficient for power-hungry peripherals.</p> </li> <li> <p>Linear Regulator Efficiency: Wastes excess energy as heat, especially when stepping down from 9V to 3.3V.</p> </li> <li> <p>Requires Heat Dissipation: Can overheat if powering multiple components without a heatsink.</p> </li> <li> <p>Not the Best for Battery-Powered Applications: Inefficient compared to switching regulators (buck converters).</p> </li> </ul> <p>The AMS1117-3.3S was chosen over the others because it is simpler to implement, requires fewer external components, and is more compact and cost-effective for the system's power needs. While it has lower efficiency, heat dissipation is manageable given the system's power requirements.</p> <p>4. Power Supply</p> Option Component Pros Cons 1. <p>B0B248DSFG</p> <p></p> <p>Price: $11.98</p> <p>Link: Click Here</p> <p>Datasheet</p> <p>Mfr: LCLEBM</p> <ul> <li> <p>9V, 1500mAh Capacity \u2013 Provides decent runtime for low-power applications.</p> </li> <li> <p>Rechargeable Li-ion Chemistry \u2013 Reduces waste and long-term costs.</p> </li> <li> <p>Built-in Protection Circuit \u2013 Prevents overcharging, over-discharging, and short circuits.</p> </li> <li> <p>Compact Size \u2013 Fits standard 9V battery holders.</p> </li> </ul> <ul> <li> <p>Actual Capacity May Be Lower Than Advertised \u2013 Some 9V Li-ion batteries have lower true capacity.</p> </li> <li> <p>Voltage Drops Under Load \u2013 May affect performance in high-current applications.</p> </li> <li> <p>Requires a Compatible Charger \u2013 Cannot be charged with a standard NiMH or alkaline charger.</p> </li> </ul> 2. <p>3046-9V-ND</p> <p></p> <p>Price: $4.46/unit</p> <p>Link: Click Here</p> <p>Datasheet</p> <p>Mfr: Duracell</p> <ul> <li> <p>Reliable Duracell Brand \u2013 Known for consistent quality and performance.</p> </li> <li> <p>Alkaline Chemistry \u2013 Provides stable voltage for moderate-power applications.</p> </li> <li> <p>No Recharge Required \u2013 Convenient for one-time use scenarios.</p> </li> <li> <p>Long Shelf Life \u2013 Retains charge well when stored.</p> </li> </ul> <ul> <li> <p>Non-Rechargeable \u2013 Increases long-term cost and waste.</p> </li> <li> <p>Lower Capacity Than Li-ion \u2013 Drains faster under high loads.</p> </li> <li> <p>Voltage Drops Over Time \u2013 Performance degrades as the battery discharges.</p> </li> </ul> <p>The B0B248DSFG (9V Li-ion) was chosen over the Duracell 9V (alkaline) because it is rechargeable, offers a higher capacity, and maintains a more stable voltage under load, making it more cost-effective and efficient for long-term use in the system.</p> <p>Microcontroller Selection:</p>"},{"location":"Component%20Selection/#determine-project-specific-requirements","title":"1. Determine Project-Specific Requirements","text":"<ul> <li> <p>Communication Protocols:</p> </li> <li> <p>SPI: Likely needed for high-speed data transfer (check gyroscope     &gt; requirements).</p> </li> <li> <p>I2C: Used for lower-speed sensors (MPU-6050 uses I2C).</p> </li> <li> <p>UART: Might be needed for debugging or interfacing with other     &gt; systems.</p> </li> <li> <p>Pin Requirements:</p> </li> <li> <p>Power &amp; Ground: At least 2 pins.</p> </li> <li> <p>Programming: 1 pin for ICSP (for the PIC).</p> </li> <li> <p>GPIO: Additional for controlling/resetting components.</p> </li> <li> <p>Communication: I2C (SCL, SDA), SPI (MISO, MOSI, SCK, SS), and     &gt; possibly UART.</p> </li> </ul>"},{"location":"Component%20Selection/#researching-the-pic18f27q10-microcontroller","title":"2. Researching the PIC18F27Q10 Microcontroller","text":"Feature PIC18F27Q10 Pins 28 I2C 2 modules SPI 2 modules UART 2 modules GPIO 25 (shared with other functions) Operating Voltage 3.3V or 5V Flash Memory 128 KB RAM 8 KB EEPROM 1 KB Clock Speed 64 MHz <ul> <li> <p>Meets Requirements:</p> </li> <li> <p>Supports I2C (needed for MPU-6050)</p> </li> <li> <p>Has enough GPIOs for additional connections</p> </li> <li> <p>Multiple communication protocols (SPI, UART, etc.)</p> </li> <li> <p>Exceeds Requirements:</p> </li> <li> <p>Extra memory and processing power beyond the immediate need.</p> </li> <li> <p>Does Not Meet Requirements:</p> </li> <li> <p>No built-in WiFi/Bluetooth (handled by the ESP32 on another team     &gt; member's end).</p> </li> </ul>"},{"location":"Component%20Selection/#checking-for-compatibility-issues","title":"3. Checking for Compatibility Issues:","text":"<ul> <li> <p>The MPU-6050 gyroscope is commonly used with the PIC18F27Q10, but Microchip libraries and drivers should be verified.</p> </li> <li> <p>Check if Microchip\\'s I2C library supports MPU-6050 well.</p> </li> <li> <p>Look for existing libraries for interfacing the MPU-6050 with PIC (Microchip Harmony, MPLAB Code Configurator, etc.)</p> </li> <li> <p>Ensure no known I2C clock stretching issues with PIC.</p> </li> </ul>"},{"location":"Component%20Selection/#role-description","title":"4. Role Description","text":"<p>As part of Team 309, the responsibility is to interface the MPU-6050 gyroscope with the PIC18F27Q10 to measure the rotation speed of the spinning top\\'s motor. This data will then be transmitted to another team member's ESP32, which will handle further communication with the human interface module for visualization.</p> <p>Key Responsibilities:</p> <ul> <li> <p>Sensing: Capturing rotational data via MPU-6050 (I2C).</p> </li> <li> <p>Processing: Sending processed data from PIC18F27Q10 to ESP32.</p> </li> <li> <p>Power Management: Ensuring compatibility with 3.3V power supply.</p> </li> <li> <p>Communication: Handling I2C communication between the PIC and MPU-6050.</p> </li> </ul>"},{"location":"Component%20Selection/#pic-table","title":"PIC Table","text":"ESP Info Answer Model PIC18F27Q10 Product Page URL Microchip Product Page Datasheet URL(s) Datasheet Application Notes URL(s) Application Notes Vendor link DigiKey Code Examples Microchip GitHub External Resources URL(s) YouTube Unit cost $2.08 Absolute Maximum Current for entire IC 250mA Supply Voltage Range 2.3V (Min) / 3.3V or 5V (Nominal) / 5.5V (Max) Absolute Maximum Current (for entire IC) 250mA Maximum GPIO current (per pin) 25mA Supports External Interrupts? Yes Required Programming Hardware, Cost, URL None Works with MPLabX? Yes Works with Microchip Code Configurator? Yes"},{"location":"Component%20Selection/#available-modules-pin-assignments","title":"Available Modules &amp; Pin Assignments","text":"Module # Available Needed Associated Pins (or * for any) GPIO 25 4 * ADC 11 0 N/A UART 2 1 TX, RX SPI 2 1 SCK, MISO, MOSI, SS I2C 2 1 SDA, SCL PWM 7 0 N/A ICSP 1 1 PGD, PGC, MCLR"},{"location":"Component%20Selection/#power-supply-voltage-regulation-considerations","title":"Power Supply &amp; Voltage Regulation Considerations:","text":"<ul> <li> <p>9V battery \u2192 AMS1117-3.3S (Regulates down to 3.3V for PIC &amp; MPU6050)</p> </li> <li> <p>AMS1117-3.3S Connections:</p> </li> <li> <p>Vin \u2192 9V Battery</p> </li> <li> <p>Vout \u2192 PIC18F27Q10 (VDD) &amp; MPU6050 (VCC)</p> </li> <li> <p>GND \u2192 Common ground</p> </li> </ul>"},{"location":"Component%20Selection/#peripheral-breakdown","title":"Peripheral Breakdown:","text":"<ul> <li> <p>MPU6050 Gyroscope (I2C Interface)</p> </li> <li> <p>SCL \u2192 RC3 (Pin 18)</p> </li> <li> <p>SDA \u2192 RC4 (Pin 23)</p> </li> <li> <p>VCC \u2192 3.3V (From AMS1117)</p> </li> <li> <p>GND \u2192 Common Ground</p> </li> <li> <p>INT (Optional) \u2192 Assign to an available GPIO if needed</p> </li> <li> <p>Voltage Regulator (AMS1117-3.3S)</p> </li> <li> <p>Vin \u2192 9V Battery</p> </li> <li> <p>Vout \u2192 3.3V for PIC &amp; MPU6050</p> </li> <li> <p>GND \u2192 Common Ground</p> </li> </ul> <p>MPLABX MCC Screenshot:</p> <p></p>"},{"location":"charts/","title":"Charts","text":"<pre><code>graph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];</code></pre> <pre><code>sequenceDiagram\n  autonumber\n  Alice-&gt;&gt;John: Hello John, how are you?\n  loop Healthcheck\n      John-&gt;&gt;John: Fight against hypochondria\n  end\n  Note right of John: Rational thoughts!\n  John--&gt;&gt;Alice: Great!\n  John-&gt;&gt;Bob: How about you?\n  Bob--&gt;&gt;John: Jolly good!</code></pre> <pre><code>stateDiagram-v2\n  state fork_state &lt;&lt;fork&gt;&gt;\n    [*] --&gt; fork_state\n    fork_state --&gt; State2\n    fork_state --&gt; State3\n\n    state join_state &lt;&lt;join&gt;&gt;\n    State2 --&gt; join_state\n    State3 --&gt; join_state\n    join_state --&gt; State4\n    State4 --&gt; [*]</code></pre>"},{"location":"second-page/","title":"Second Page","text":"<p>Things to discuss</p>"},{"location":"static/node_modules/mathjax/","title":"MathJax","text":""},{"location":"static/node_modules/mathjax/#beautiful-math-in-all-browsers","title":"Beautiful math in all browsers","text":"<p>MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all modern browsers.  It was designed with the goal of consolidating the recent advances in web technologies into a single, definitive, math-on-the-web platform supporting the major browsers and operating systems.  It requires no setup on the part of the user (no plugins to download or software to install), so the page author can write web documents that include mathematics and be confident that users will be able to view it naturally and easily.  Simply include MathJax and some mathematics in a web page, and MathJax does the rest.</p> <p>Some of the main features of MathJax include:</p> <ul> <li> <p>High-quality display of LaTeX, MathML, and AsciiMath notation in HTML pages</p> </li> <li> <p>Supported in most browsers with no plug-ins, extra fonts, or special   setup for the reader</p> </li> <li> <p>Easy for authors, flexible for publishers, extensible for developers</p> </li> <li> <p>Supports math accessibility, cut-and-paste interoperability, and other   advanced functionality</p> </li> <li> <p>Powerful API for integration with other web applications</p> </li> </ul> <p>See http://www.mathjax.org/ for additional details about MathJax, and https://docs.mathjax.org for the MathJax documentation.</p>"},{"location":"static/node_modules/mathjax/#mathjax-components","title":"MathJax Components","text":"<p>MathJax version 3 uses files called components that contain the various MathJax modules that you can include in your web pages or access on a server through NodeJS.  Some components combine all the pieces you need to run MathJax with one or more input formats and a particular output format, while other components are pieces that can be loaded on demand when needed, or by a configuration that specifies the pieces you want to combine in a custom way.  For usage instructions, see the MathJax documentation.</p> <p>Components provide a convenient packaging of MathJax's modules, but it is possible for you to form your own custom components, or to use MathJax's modules directly in a node application on a server.  There are web examples showing how to use MathJax in web pages and how to build your own components, and node examples illustrating how to use components in node applications or call MathJax modules directly.</p>"},{"location":"static/node_modules/mathjax/#whats-in-this-repository","title":"What's in this Repository","text":"<p>This repository contains only the component files for MathJax, not the source code for MathJax (which are available in a separate MathJax source repository).  These component files are the ones served by the CDNs that offer MathJax to the web.  In version 2, the files used on the web were also the source files for MathJax, but in version 3, the source files are no longer on the CDN, as they are not what are run in the browser.</p> <p>The components are stored in the <code>es5</code> directory, and are in ES5 format for the widest possible compatibility.  In the future, we may make an <code>es6</code> directory containing ES6 versions of the components.</p>"},{"location":"static/node_modules/mathjax/#installation-and-use","title":"Installation and Use","text":""},{"location":"static/node_modules/mathjax/#using-mathjax-components-from-a-cdn-on-the-web","title":"Using MathJax components from a CDN on the web","text":"<p>If you are loading MathJax from a CDN into a web page, there is no need to install anything.  Simply use a <code>script</code> tag that loads MathJax from the CDN.  E.g.,</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>See the MathJax documentation, the MathJax Web Demos, and the MathJax Component Repository for more information.</p>"},{"location":"static/node_modules/mathjax/#hosting-your-own-copy-of-the-mathjax-components","title":"Hosting your own copy of the MathJax Components","text":"<p>If you want to host MathJax from your own server, you can do so by installing the <code>mathjax</code> package using <code>npm</code> and moving the <code>es5</code> directory to an appropriate location on your server:</p> <pre><code>npm install mathjax@3\nmv node_modules/mathjax/es5 &lt;path-to-server-location&gt;/mathjax\n</code></pre> <p>Note that we are still making updates to version 2, so include <code>@3</code> when you install, since the latest chronological version may not be version 3.</p> <p>Alternatively, you can get the files via GitHub:</p> <pre><code>git clone https://github.com/mathjax/MathJax.git mj-tmp\nmv mj-tmp/es5 &lt;path-to-server-location&gt;/mathjax\nrm -rf mj-tmp\n</code></pre> <p>Then (in either case) you can use a script tag like the following:</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"&lt;url-to-your-site&gt;/mathjax/tex-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>where <code>&lt;url-to-your-site&gt;</code> is replaced by the URL to the location where you moved the MathJax files above.</p> <p>See the documentation for details.</p>"},{"location":"static/node_modules/mathjax/#using-mathjax-components-in-a-node-application","title":"Using MathJax components in a node application","text":"<p>To use MathJax components in a node application, install the <code>mathjax</code> package:</p> <pre><code>npm install mathjax@3\n</code></pre> <p>(we are still making updates to version 2, so you should include <code>@3</code> since the latest chronological version may not be version 3).</p> <p>Then require <code>mathjax</code> within your application:</p> <pre><code>require('mathjax').init({ ... }).then((MathJax) =&gt; { ... });\n</code></pre> <p>where the first <code>{ ... }</code> is a MathJax configuration, and the second <code>{ ... }</code> is the code to run after MathJax has been loaded.  E.g.</p> <pre><code>require('mathjax').init({\nloader: {load: ['input/tex', 'output/svg']}\n}).then((MathJax) =&gt; {\nconst svg = MathJax.tex2svg('\\\\frac{1}{x^2-1}', {display: true});\nconsole.log(MathJax.startup.adaptor.outerHTML(svg));\n}).catch((err) =&gt; console.log(err.message));\n</code></pre> <p>Note: this technique is for node-based application only, not for browser applications.  This method sets up an alternative DOM implementation, which you don't need in the browser, and tells MathJax to use node's <code>require()</code> command to load external modules.  This setup will not work properly in the browser, even if you webpack it or bundle it in other ways.</p> <p>See the documentation and the MathJax Node Repository for more details.</p>"},{"location":"static/node_modules/mathjax/#reducing-the-size-of-the-components-directory","title":"Reducing the Size of the Components Directory","text":"<p>Since the <code>es5</code> directory contains all the component files, so if you are only planning one use one configuration, you can reduce the size of the MathJax directory by removing unused components. For example, if you are using the <code>tex-chtml.js</code> component, then you can remove the <code>tex-mml-chtml.js</code>, <code>tex-svg.js</code>, <code>tex-mml-svg.js</code>, <code>tex-chtml-full.js</code>, and <code>tex-svg-full.js</code> configurations, which will save considerable space.  Indeed, you should be able to remove everything other than <code>tex-chtml.js</code>, and the <code>input/tex/extensions</code>, <code>output/chtml/fonts/woff-v2</code>, <code>adaptors</code>, <code>a11y</code>, and <code>sre</code> directories.  If you are using the results only on the web, you can remove <code>adaptors</code> as well.</p> <p>If you are not using A11Y support (e.g., speech generation, or semantic enrichment), then you can remove <code>a11y</code> and <code>sre</code> as well (though in this case you may need to disable the assistive tools in the MathJax contextual menu in order to avoid MathJax trying to load them when they aren't there).</p> <p>If you are using SVG rather than CommonHTML output (e.g., <code>tex-svg.js</code> rather than <code>tex-chtml.js</code>), you can remove the <code>output/chtml/fonts/woff-v2</code> directory.  If you are using MathML input rather than TeX (e.g., <code>mml-chtml.js</code> rather than <code>tex-chtml.js</code>), then you can remove <code>input/tex/extensions</code> as well.</p>"},{"location":"static/node_modules/mathjax/#the-component-files-and-pull-requests","title":"The Component Files and Pull Requests","text":"<p>The <code>es5</code> directory is generated automatically from the contents of the MathJax source repository.  You can rebuild the components using the command</p> <pre><code>npm run make-es5 --silent\n</code></pre> <p>Note that since the contents of this repository are generated automatically, you should not submit pull requests that modify the contents of the <code>es5</code> directory.  If you wish to submit a modification to MathJax, you should make a pull request in the MathJax source repository.</p>"},{"location":"static/node_modules/mathjax/#mathjax-community","title":"MathJax Community","text":"<p>The main MathJax website is http://www.mathjax.org, and it includes announcements and other important information.  A MathJax user forum for asking questions and getting assistance is hosted at Google, and the MathJax bug tracker is hosted at GitHub.</p> <p>Before reporting a bug, please check that it has not already been reported.  Also, please use the bug tracker (rather than the help forum) for reporting bugs, and use the user's forum (rather than the bug tracker) for questions about how to use MathJax.</p>"},{"location":"static/node_modules/mathjax/#mathjax-resources","title":"MathJax Resources","text":"<ul> <li>MathJax Documentation</li> <li>MathJax Components</li> <li>MathJax Source Code</li> <li>MathJax Web Examples</li> <li>MathJax Node Examples</li> <li>MathJax Bug Tracker</li> <li>MathJax Users' Group</li> </ul>"},{"location":"subfolder/","title":"This is the index to a subfolder","text":"<p>Things to discuss</p>"},{"location":"subfolder/another-subfile/","title":"This is a secondary sub page","text":"<p>Things to discuss</p>"}]}